
Benchmark          (repositorySupplier)  (size)  Mode  Cnt    Score    Error  Units
Main.add_after                 HASH_SET    1000  avgt   20   46.163 ±  5.461  ns/op
Main.add_after                 HASH_SET   10000  avgt   20   44.296 ±  3.230  ns/op
Main.add_after                 TREE_SET    1000  avgt   20   31.484 ±  5.207  ns/op
Main.add_after                 TREE_SET   10000  avgt   20   29.581 ±  0.850  ns/op
Main.add_after               ARRAY_LIST    1000  avgt   20   34.353 ±  2.646  ns/op
Main.add_after               ARRAY_LIST   10000  avgt   20   74.282 ± 14.054  ns/op
Main.add_after              LINKED_LIST    1000  avgt   20   39.986 ±  6.901  ns/op
Main.add_after              LINKED_LIST   10000  avgt   20  101.700 ± 32.244  ns/op
Main.add_after      CONCURRENT_HASH_MAP    1000  avgt   20   89.420 ±  2.351  ns/op
Main.add_after      CONCURRENT_HASH_MAP   10000  avgt   20   89.029 ±  1.162  ns/op
Main.add_before                HASH_SET    1000  avgt   20   58.702 ±  5.255  ns/op
Main.add_before                HASH_SET   10000  avgt   20   64.152 ±  8.015  ns/op
Main.add_before                TREE_SET    1000  avgt   20   89.565 ±  3.799  ns/op
Main.add_before                TREE_SET   10000  avgt   20  127.526 ± 11.166  ns/op
Main.add_before              ARRAY_LIST    1000  avgt   20   38.440 ±  3.685  ns/op
Main.add_before              ARRAY_LIST   10000  avgt   20   83.602 ± 21.761  ns/op
Main.add_before             LINKED_LIST    1000  avgt   20   37.637 ±  3.361  ns/op
Main.add_before             LINKED_LIST   10000  avgt   20  114.263 ± 33.574  ns/op
Main.add_before     CONCURRENT_HASH_MAP    1000  avgt   20  116.036 ± 28.166  ns/op
Main.add_before     CONCURRENT_HASH_MAP   10000  avgt   20  120.706 ±  2.928  ns/op
Main.add_existing              HASH_SET    1000  avgt   20   53.517 ±  5.545  ns/op
Main.add_existing              HASH_SET   10000  avgt   20   72.336 ± 14.140  ns/op
Main.add_existing              TREE_SET    1000  avgt   20   53.473 ± 14.699  ns/op
Main.add_existing              TREE_SET   10000  avgt   20   37.113 ±  1.932  ns/op
Main.add_existing            ARRAY_LIST    1000  avgt   20   91.976 ±  6.944  ns/op
Main.add_existing            ARRAY_LIST   10000  avgt   20  141.215 ± 26.958  ns/op
Main.add_existing           LINKED_LIST    1000  avgt   20   99.208 ± 39.701  ns/op
Main.add_existing           LINKED_LIST   10000  avgt   20  100.947 ± 21.285  ns/op
Main.add_existing   CONCURRENT_HASH_MAP    1000  avgt   20  102.620 ±  5.872  ns/op
Main.add_existing   CONCURRENT_HASH_MAP   10000  avgt   20  134.614 ± 15.541  ns/op


Benchmark                 (repositorySupplier)  (size)  Mode  Cnt   Score    Error  Units
Main.contains_existing                HASH_SET    1000  avgt   20  33.149 ±  1.799  ns/op
Main.contains_existing                HASH_SET   10000  avgt   20  63.609 ± 11.332  ns/op
Main.contains_existing                TREE_SET    1000  avgt   20  25.636 ±  3.047  ns/op
Main.contains_existing                TREE_SET   10000  avgt   20  29.301 ±  4.284  ns/op
Main.contains_existing              ARRAY_LIST    1000  avgt   20  39.359 ±  1.944  ns/op
Main.contains_existing              ARRAY_LIST   10000  avgt   20  40.424 ±  4.383  ns/op
Main.contains_existing             LINKED_LIST    1000  avgt   20  39.684 ±  2.726  ns/op
Main.contains_existing             LINKED_LIST   10000  avgt   20  40.419 ±  5.148  ns/op
Main.contains_existing     CONCURRENT_HASH_MAP    1000  avgt   20  32.379 ±  1.293  ns/op
Main.contains_existing     CONCURRENT_HASH_MAP   10000  avgt   20  47.106 ±  0.650  ns/op
Main.contains_inexisting              HASH_SET    1000  avgt   20  28.303 ±  5.064  ns/op
Main.contains_inexisting              HASH_SET   10000  avgt   20  27.683 ±  0.471  ns/op
Main.contains_inexisting              TREE_SET    1000  avgt   20  20.773 ±  0.240  ns/op
Main.contains_inexisting              TREE_SET   10000  avgt   20  20.948 ±  0.354  ns/op
Main.contains_inexisting            ARRAY_LIST    1000  avgt   20  19.412 ±  0.434  ns/op
Main.contains_inexisting            ARRAY_LIST   10000  avgt   20  19.422 ±  0.266  ns/op
Main.contains_inexisting           LINKED_LIST    1000  avgt   20  20.374 ±  1.317  ns/op
Main.contains_inexisting           LINKED_LIST   10000  avgt   20  23.405 ±  1.556  ns/op
Main.contains_inexisting   CONCURRENT_HASH_MAP    1000  avgt   20  32.159 ±  9.259  ns/op
Main.contains_inexisting   CONCURRENT_HASH_MAP   10000  avgt   20  31.941 ±  8.089  ns/op
Main.remove_existing                  HASH_SET    1000  avgt   20  43.750 ± 16.248  ns/op
Main.remove_existing                  HASH_SET   10000  avgt   20  59.554 ±  7.190  ns/op
Main.remove_existing                  TREE_SET    1000  avgt   20  28.964 ±  6.248  ns/op
Main.remove_existing                  TREE_SET   10000  avgt   20  34.110 ±  7.787  ns/op
Main.remove_existing                ARRAY_LIST    1000  avgt   20  43.400 ±  5.039  ns/op
Main.remove_existing                ARRAY_LIST   10000  avgt   20  39.988 ±  2.274  ns/op
Main.remove_existing               LINKED_LIST    1000  avgt   20  44.901 ±  4.222  ns/op
Main.remove_existing               LINKED_LIST   10000  avgt   20  37.522 ±  3.397  ns/op
Main.remove_existing       CONCURRENT_HASH_MAP    1000  avgt   20  47.099 ±  7.395  ns/op
Main.remove_existing       CONCURRENT_HASH_MAP   10000  avgt   20  87.466 ± 19.635  ns/op
Main.remove_inexisting                HASH_SET    1000  avgt   20  29.749 ±  5.209  ns/op
Main.remove_inexisting                HASH_SET   10000  avgt   20  32.786 ±  4.315  ns/op
Main.remove_inexisting                TREE_SET    1000  avgt   20  21.825 ±  1.119  ns/op
Main.remove_inexisting                TREE_SET   10000  avgt   20  29.520 ±  8.683  ns/op
Main.remove_inexisting              ARRAY_LIST    1000  avgt   20  30.039 ± 14.200  ns/op
Main.remove_inexisting              ARRAY_LIST   10000  avgt   20  22.632 ±  5.651  ns/op
Main.remove_inexisting             LINKED_LIST    1000  avgt   20  24.496 ±  5.137  ns/op
Main.remove_inexisting             LINKED_LIST   10000  avgt   20  21.138 ±  1.899  ns/op
Main.remove_inexisting     CONCURRENT_HASH_MAP    1000  avgt   20  34.664 ±  5.123  ns/op
Main.remove_inexisting     CONCURRENT_HASH_MAP   10000  avgt   20  34.055 ±  8.324  ns/op

Main.add_after                    MUTABLE_LIST    1000  avgt   20   34.228 ±  7.224  ns/op
Main.add_after                    MUTABLE_LIST   10000  avgt   20   78.611 ± 23.061  ns/op
Main.add_before                   MUTABLE_LIST    1000  avgt   20   32.347 ±  4.426  ns/op
Main.add_before                   MUTABLE_LIST   10000  avgt   20  100.354 ± 23.726  ns/op
Main.add_existing                 MUTABLE_LIST    1000  avgt   20   88.996 ±  8.769  ns/op
Main.add_existing                 MUTABLE_LIST   10000  avgt   20  117.898 ± 14.681  ns/op
Main.contains_existing            MUTABLE_LIST    1000  avgt   20   56.607 ±  5.331  ns/op
Main.contains_existing            MUTABLE_LIST   10000  avgt   20   70.309 ± 22.401  ns/op
Main.contains_inexisting          MUTABLE_LIST    1000  avgt   20   23.855 ±  5.433  ns/op
Main.contains_inexisting          MUTABLE_LIST   10000  avgt   20   20.499 ±  1.237  ns/op
Main.remove_existing              MUTABLE_LIST    1000  avgt   20   61.262 ± 15.598  ns/op
Main.remove_existing              MUTABLE_LIST   10000  avgt   20   52.258 ±  3.816  ns/op
Main.remove_inexisting            MUTABLE_LIST    1000  avgt   20   23.113 ±  3.679  ns/op
Main.remove_inexisting            MUTABLE_LIST   10000  avgt   20   27.215 ±  3.366  ns/op

Main.add_after                     MUTABLE_SET    1000  avgt   20  34.710 ±  2.463  ns/op
Main.add_after                     MUTABLE_SET   10000  avgt   20  32.113 ±  0.705  ns/op
Main.add_before                    MUTABLE_SET    1000  avgt   20  55.028 ±  4.453  ns/op
Main.add_before                    MUTABLE_SET   10000  avgt   20  76.057 ± 12.519  ns/op
Main.add_existing                  MUTABLE_SET    1000  avgt   20  34.127 ±  1.467  ns/op
Main.add_existing                  MUTABLE_SET   10000  avgt   20  70.671 ± 12.991  ns/op
Main.contains_existing             MUTABLE_SET    1000  avgt   20  33.156 ±  3.469  ns/op
Main.contains_existing             MUTABLE_SET   10000  avgt   20  64.872 ± 14.518  ns/op
Main.contains_inexisting           MUTABLE_SET    1000  avgt   20  33.022 ±  2.516  ns/op
Main.contains_inexisting           MUTABLE_SET   10000  avgt   20  31.689 ±  1.241  ns/op
Main.remove_existing               MUTABLE_SET    1000  avgt   20  29.791 ±  1.916  ns/op
Main.remove_existing               MUTABLE_SET   10000  avgt   20  49.663 ±  4.351  ns/op
Main.remove_inexisting             MUTABLE_SET    1000  avgt   20  32.311 ±  5.605  ns/op
Main.remove_inexisting             MUTABLE_SET   10000  avgt   20  33.114 ±  2.840  ns/op

Main.add_after              FASTUTIL_ARRAY_LIST    1000  avgt   20   31.059 ±  4.408  ns/op
Main.add_after              FASTUTIL_ARRAY_LIST   10000  avgt   20   44.926 ± 12.439  ns/op
Main.add_after            FASTUTIL_AVL_TREE_SET    1000  avgt   20   33.166 ±  1.972  ns/op
Main.add_after            FASTUTIL_AVL_TREE_SET   10000  avgt   20   31.086 ±  1.270  ns/op
Main.add_before             FASTUTIL_ARRAY_LIST    1000  avgt   20   29.501 ±  2.399  ns/op
Main.add_before             FASTUTIL_ARRAY_LIST   10000  avgt   20   79.445 ± 31.347  ns/op
Main.add_before           FASTUTIL_AVL_TREE_SET    1000  avgt   20  176.806 ±  8.977  ns/op
Main.add_before           FASTUTIL_AVL_TREE_SET   10000  avgt   20  238.779 ± 19.803  ns/op
Main.add_existing           FASTUTIL_ARRAY_LIST    1000  avgt   20   92.114 ±  5.573  ns/op
Main.add_existing           FASTUTIL_ARRAY_LIST   10000  avgt   20  151.971 ± 28.511  ns/op
Main.add_existing         FASTUTIL_AVL_TREE_SET    1000  avgt   20   61.009 ±  6.021  ns/op
Main.add_existing         FASTUTIL_AVL_TREE_SET   10000  avgt   20   57.868 ±  1.639  ns/op
Main.contains_existing      FASTUTIL_ARRAY_LIST    1000  avgt   20   44.890 ±  5.733  ns/op
Main.contains_existing      FASTUTIL_ARRAY_LIST   10000  avgt   20   38.961 ±  4.488  ns/op
Main.contains_existing    FASTUTIL_AVL_TREE_SET    1000  avgt   20   28.244 ±  3.125  ns/op
Main.contains_existing    FASTUTIL_AVL_TREE_SET   10000  avgt   20   30.681 ±  4.737  ns/op
Main.contains_inexisting    FASTUTIL_ARRAY_LIST    1000  avgt   20   23.064 ±  2.153  ns/op
Main.contains_inexisting    FASTUTIL_ARRAY_LIST   10000  avgt   20   24.514 ±  3.278  ns/op
Main.contains_inexisting  FASTUTIL_AVL_TREE_SET    1000  avgt   20   22.694 ±  2.596  ns/op
Main.contains_inexisting  FASTUTIL_AVL_TREE_SET   10000  avgt   20   29.410 ±  7.129  ns/op
Main.remove_existing        FASTUTIL_ARRAY_LIST    1000  avgt   20   46.826 ±  7.238  ns/op
Main.remove_existing        FASTUTIL_ARRAY_LIST   10000  avgt   20   39.836 ±  3.596  ns/op
Main.remove_existing      FASTUTIL_AVL_TREE_SET    1000  avgt   20   44.236 ± 11.603  ns/op
Main.remove_existing      FASTUTIL_AVL_TREE_SET   10000  avgt   20   36.840 ±  6.058  ns/op
Main.remove_inexisting      FASTUTIL_ARRAY_LIST    1000  avgt   20   29.370 ±  3.606  ns/op
Main.remove_inexisting      FASTUTIL_ARRAY_LIST   10000  avgt   20   26.730 ±  2.417  ns/op
Main.remove_inexisting    FASTUTIL_AVL_TREE_SET    1000  avgt   20   29.849 ±  5.975  ns/op
Main.remove_inexisting    FASTUTIL_AVL_TREE_SET   10000  avgt   20   27.808 ±  4.171  ns/op

Main.add_after               KOLOBOKE_HASH_SET    1000  avgt   20   46.305 ±   9.741  ns/op
Main.add_after               KOLOBOKE_HASH_SET   10000  avgt   20   45.160 ±  10.619  ns/op
Main.add_before              KOLOBOKE_HASH_SET    1000  avgt   20  123.964 ±  23.983  ns/op
Main.add_before              KOLOBOKE_HASH_SET   10000  avgt   20  792.956 ± 128.674  ns/op
Main.add_existing            KOLOBOKE_HASH_SET    1000  avgt   20   35.609 ±   2.406  ns/op
Main.add_existing            KOLOBOKE_HASH_SET   10000  avgt   20   46.399 ±   4.382  ns/op
Main.contains_existing       KOLOBOKE_HASH_SET    1000  avgt   20   38.670 ±   9.161  ns/op
Main.contains_existing       KOLOBOKE_HASH_SET   10000  avgt   20   40.560 ±   4.420  ns/op
Main.contains_inexisting     KOLOBOKE_HASH_SET    1000  avgt   20   34.608 ±   2.547  ns/op
Main.contains_inexisting     KOLOBOKE_HASH_SET   10000  avgt   20   35.792 ±   2.393  ns/op
Main.remove_existing         KOLOBOKE_HASH_SET    1000  avgt   20   44.400 ±   8.699  ns/op
Main.remove_existing         KOLOBOKE_HASH_SET   10000  avgt   20   47.088 ±   5.219  ns/op
Main.remove_inexisting       KOLOBOKE_HASH_SET    1000  avgt   20   37.046 ±   5.613  ns/op
Main.remove_inexisting       KOLOBOKE_HASH_SET   10000  avgt   20   38.074 ±   3.560  ns/op


